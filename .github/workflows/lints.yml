on: [push]

name: Code Quality

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  base:
    uses: ./.github/workflows/base.yml

  tests:
    needs: [base]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Restore cache
        id: cache
        uses: ./.github/actions/cache
        with:
          variant: coverage
          compiled: restore

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: llvm-tools

      - name: Run tests
        uses: actions-rs/cargo@v1
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: -Cinstrument-coverage
          LLVM_PROFILE_FILE: kct-%p-%m.profraw
        with:
          command: test
          args: --tests --workspace

      - name: Install coverage tool
        if: steps.cache.outputs.index != 'true'
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: grcov

      - name: Generate coverage report
        shell: bash
        run: |
          grcov . \
            -t lcov \
            -s . --binary-path ./target/debug/ -o ./target/debug/coverage \
            --branch --ignore-not-existing --ignore 'target/*'

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./target/debug/coverage

      - name: Save cache
        uses: ./.github/actions/cache
        with:
          variant: coverage
          compiled: save

  style:
    needs: [base]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Configure cache
        uses: ./.github/actions/cache

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
