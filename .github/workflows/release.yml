# MIT License
#
# Copyright (c) 2020 Yaroslav Bolyukin
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

on:
  push:
    tags:
      - v*

name: Release

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Cache cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all

  github-release:
    needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      RUST: nightly
      TARGET: x86_64-unknown-linux-musl
      BIN: kct
      NAME: kct-linux-amd64
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST }}
          override: true
          target: ${{ env.TARGET }}

      - name: Cache cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bin=kct --release --target ${{ env.TARGET }}

      - name: Create packages
        shell: bash
        run: |
          strip target/${{ env.TARGET }}/release/${{ env.BIN }}
          cd target/${{ env.TARGET }}/release

          cp ${{ env.BIN }} ../../../${{ env.NAME }}
          cd -

      - name: Generate SHA-256
        run: shasum -a 256 ${{ env.NAME }} > ${{ env.NAME }}.sha256

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "kct*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cargo-release:
    needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Cache cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo login
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CARGO_TOKEN }}

      - name: Publish crates
        shell: bash
        run: |
          crates=('helper' 'kube' 'package')
          for crate in ${crates[@]}; do
            cargo publish --manifest-path="crates/kct_$crate/Cargo.toml"
            sleep 60
          done

      - name: Publish binary
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --manifest-path=bin/Cargo.toml
